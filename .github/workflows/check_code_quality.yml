name: Check Code Quality

on:
  pull_request_target:  # pull_requestの代わりにpull_request_targetを使用
    branches:
      - develop
      - main

jobs:
  format:
    runs-on: ubuntu-latest
    permissions:  # 明示的に権限を設定
      contents: write
      pull-requests: write
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        repository: ${{ github.event.pull_request.head.repo.full_name }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run formatter
      id: format
      run: |
        make format
        echo "FORMAT_CHANGED=$(git status --porcelain | wc -l)" >> $GITHUB_OUTPUT

    - name: Commit changes
      if: steps.format.outputs.FORMAT_CHANGED != '0'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add .
        git commit -m "🎨 Format code with isort and black"
        git push
        echo "FORMATTED=true" >> $GITHUB_OUTPUT

    - name: Skip remaining workflow
      if: steps.format.outputs.FORMAT_CHANGED != '0'
      run: |
        echo "Formatting changes were pushed. Skipping remaining steps as a new workflow will be triggered."
        exit 0

  lint:
    needs: format
    if: ${{ !contains(needs.format.result, 'skipped') }}  # formatジョブがskipされていない場合のみ実行
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        repository: ${{ github.event.pull_request.head.repo.full_name }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run linter
      run: make lint